{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => {\n  basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item));\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        //returning the curent stare,\n        basket: [...state.basket, action.item] //adding the item to the current basket\n\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket]; //cloned the basket\n      //find index of product id to be removed\n\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //got to index and remove first occurence of that particular id\n        newBasket.splice(index, 1); //items exist in basket\n      } else {\n        console.warn(\"Can't remove\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Varun/Desktop/React-Clones/clone1/amazon/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amount","item","reducer","state","action","console","log","type","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAC;AACtBC,EAAAA,MAAM,EAAC;AADe,CAAnB;AAGP,OAAO,MAAMC,cAAc,GAAED,MAAD,IAAU;AAClCA,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,MAAR,EAAgBC,MAAM,EAACC,IAAvB;AACH,CAFM;;AAGP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGJ,KADA;AACM;AACTN,QAAAA,MAAM,EAAC,CAAC,GAAGM,KAAK,CAACN,MAAV,EAAiBO,MAAM,CAACH,IAAxB,CAFJ,CAEiC;;AAFjC,OAAP;;AAIJ,SAAK,oBAAL;AACI,UAAIO,SAAS,GAAC,CAAC,GAAGL,KAAK,CAACN,MAAV,CAAd,CADJ,CACoC;AAChC;;AACA,YAAMY,KAAK,GAACN,KAAK,CAACN,MAAN,CAAaa,SAAb,CAAwBC,UAAD,IAAcA,UAAU,CAACC,EAAX,KAAgBR,MAAM,CAACQ,EAA5D,CAAZ;;AACA,UAAIH,KAAK,IAAE,CAAX,EACA;AAAI;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAuB,CAAvB,EADJ,CAC6B;AAE5B,OAJD,MAKI;AACAJ,QAAAA,OAAO,CAACS,IAAR,CAAa,cAAb;AACH;;AACD,aAAO,EAAC,GAAGX,KAAJ;AAAUN,QAAAA,MAAM,EAACW;AAAjB,OAAP;;AACJ;AACI,aAAOL,KAAP;AApBR;AAsBH,CAxBD;;AAyBA,eAAeD,OAAf","sourcesContent":["export const initialState={\r\n    basket:[],\r\n}\r\nexport const getBasketTotal=(basket)=>{\r\n    basket?.reduce((amount,item))\r\n}\r\nconst reducer = (state,action)=>{\r\n    console.log(action);\r\n    switch (action.type) {\r\n        case \"ADD_TO_BASKET\":\r\n            return {\r\n                ...state,//returning the curent stare,\r\n                basket:[...state.basket,action.item]//adding the item to the current basket\r\n            };\r\n        case \"REMOVE_FROM_BASKET\":\r\n            let newBasket=[...state.basket] //cloned the basket\r\n            //find index of product id to be removed\r\n            const index=state.basket.findIndex((basketItem)=>basketItem.id===action.id)\r\n            if (index>=0)\r\n            {   //got to index and remove first occurence of that particular id\r\n                newBasket.splice(index,1)//items exist in basket\r\n            \r\n            }\r\n            else{\r\n                console.warn(\"Can't remove\")\r\n            }\r\n            return {...state,basket:newBasket}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}